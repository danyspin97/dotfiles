# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

xwayland enable

set $mod Mod4
set $sup Mod1

# Set workspace
set $workspace1 1
# Terminal
set $workspace2 2
# Second workspace for terminal
set $workspace3 3
# IM
set $workspace4 4
# Video and music
set $workspace5 5
# Office
set $workspace6 6
# various programs
set $workspace7 7
# Others
set $workspace8 8

set $monitor1 "DP-5"
set $monitor2 "DP-4"

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango: Iosevka Term Regular 13
font pango: Iosevka Regular 16

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

workspace_auto_back_and_forth yes
hide_edge_borders none
default_border pixel 4
focus_on_window_activation urgent
# Handle popup
popup_during_fullscreen smart

# Start a terminal in the home directory
bindsym $mod+Return exec kitty
# Start a terminal in the same directory of the current window
bindsym $mod+Shift+Return exec kitty --working-directory $(~/.local/bin/get_terminal_folder_sway)

# Application launcher
bindsym $mod+d exec wofi --show drun
bindsym $mod+Shift+d exec wofi --show run
bindsym $mod+Shift+p exec ~/.local/bin/get_pass

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+x split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
#bindsym $sup+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bar {
    swaybar_command waybar
#     # status_command swaybar
#     position top
#     # tray_output all
}

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8

# assign [class="Firefox"]                            $workspace1
# assign [class="Qutebrowser"]                        $workspace1
# assign [class="Telegram"]                           $workspace3
# assign [class="discord"]                            $workspace4
# assign [title="mpsyt"]                              $workspace5
# assign [class="^Vlc$"]                              $workspace5
#assign [app_id="wyeb\."]                      $workspace1
assign [app_id="mpv"]                         $workspace5
#for_window [class="mpv"] move to workspace $workspace5

# for_window [window_role="pop-up"] floating enable
# for_window [window_role="bubble"] floating enable
# for_window [window_role="task_dialog"] floating enable
# for_window [window_type="dialog"] floating enable
#for_window [window_type="menu"] floating enable
# for_window [class="GParted"] floating enable border normal
# for_window [title="i3_help"] floating enable sticky enable border normal
# for_window [class="(?i)pavucontrol"] floating enable, move position mouse
# for_window [class="feh"] floating enable, move position center

# for_window [class="(?i)virtualbox"] floating enable border normal
# for_window [class="Xfburn"] floating enable

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Set shut down, restart and locking features
bindsym $mod+Shift+s exec wlogout

# resize window (you can also use the mouse for that)
mode "resize" {
# These bindings trigger as soon as you enter the resize mode

# Vim movement bindings
    bindsym h resize shrink width 3 px or 3 ppt
    bindsym j resize grow height 3 px or 3 ppt
    bindsym k resize shrink height 3 px or 3 ppt
    bindsym l resize grow width 3 px or 3 ppt
    bindsym Left resize shrink width 3 px or 3 ppt
    bindsym Down resize grow height 3 px or 3 ppt
    bindsym Up resize shrink height 3 px or 3 ppt
    bindsym Right resize grow width 3 px or 3 ppt

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
    bindsym Shift+h resize shrink width 10 px or 10 ppt
    bindsym Shift+j resize grow height 10 px or 10 ppt
    bindsym Shift+k resize shrink height 10 px or 10 ppt
    bindsym Shift+l resize grow width 10 px or 10 ppt
    bindsym Shift+Left resize shrink width 10 px or 10 ppt
    bindsym Shift+Down resize grow height 10 px or 10 ppt
    bindsym Shift+Up resize shrink height 10 px or 10 ppt
    bindsym Shift+Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Audio settings
bindsym XF86AudioRaiseVolume exec ~/.local/bin/sndio_volume raise
bindsym XF86AudioLowerVolume exec ~/.local/bin/sndio_volume lower
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
#bindsym XF86Start exec playerctl play
#

# Screen brightness controls
bindsym XF86MonBrightnessUp exec "brightnessctl set +15%; notify-send 'Brightness up (+10)'"
bindsym XF86MonBrightnessDown exec "brightnessctl set 15%-; notify-send 'Brightness down (-10)'"

# Move the current workspace to the next output
# (effectively toggles when you only have two outputs)
bindsym $mod+Shift+w move workspace to output right

# workspace screens
workspace $workspace1 output $monitor2
workspace $workspace2 output $monitor1
workspace $workspace3 output $monitor1
workspace $workspace4 output $monitor1
workspace $workspace5 output $monitor1
workspace $workspace6 output $monitor2
workspace $workspace7 output $monitor1
workspace $workspace8 output $monitor1

# Program shortcut
bindsym $mod+c exec firefox
bindsym $mod+z exec zathura

# class                 border  bground text    indicator child_border
client.focused          #fc9867 #fc9867 #1c1c1c #ffd866   #fc9867
client.focused_inactive #727072 #727072 #fcfcfa #ffd866   #727072
client.unfocused        #1c1c1c #1c1c1c #fcfcfa #1c1c1c   #1c1c1c
client.urgent           #fc0967 #fc0967 #eeeeee #fc0967   #fc0967
client.placeholder      #66d9fe #66d9fe #eeeeee #66d9fe   #66d9fe

client.background       #1c1c1c

# for_window [class="^.*"] border pixel 3

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changi$
# gaps inner|outer current|all set|plus|minus <px>
#gaps inner all set 10
#gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Set inner/outer gaps
#gaps inner 7
#gaps outer 2

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is$
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of $
bindsym $mod+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Space exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayr switch-window >> /tmp/swayr.log 2>&1

bindsym $mod+Backspace exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayr quit-window > /tmp/swayr.log 2>&1

bindsym $mod+Tab exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayr switch-to-urgent-or-lru-window >> /tmp/swayr.log 2>&1

bindsym $mod+Next exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayr next-window >> /tmp/swayr.log 2>&2

bindsym $mod+Prior exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayr prev-window >> /tmp/swayr.log 2>&2

# Set keyboard layout
# input * xkb_layout it

# input 65261:24672:OLKB_Planck xkb_layout us
# input 65261:24672:OLKB_Planck_Consumer_Control xkb_layout us
# input 65261:24672:OLKB_Planck_Keyboard xkb_layout us
# input 65261:24672:OLKB_Planck_System_Control xkb_layout us
# input 65261:24673:OLKB_Preonic xkb_layout us
# input 65261:24673:OLKB_Preonic_Keyboard xkb_layout us
# input 65261:24673:OLKB_Preonic_Consumer_Control xkb_layout us
# input 65261:24673:OLKB_Preonic_System_Control xkb_layout us

# input 1133:16492:Logitech_G603 accel_profile flat

# Set wallpaper
#output * bg ~/Pictures/Wallpapers/SteinsGate01.jpg fill

seat seat0 xcursor_theme Paper 12

output DP-3 transform 270 pos 0 0
output DP-5 scale 2.0 pos 1080 410
output eDP-1 disable

#seat seat0 hide_cursor 10000
#seat seat0 hide_cursor when-typing enable

# Run statusbar

#exec dbus-daemon --session --nosyslog --address=unix:path=/run/user/1000/bus
exec mako
#exec swayidle -w \
#     timeout 1200 'swaylock -f -c 000000' \
#     timeout 1800 'swaymsg "output * dpms off"' \
#     resume 'swaymsg "output * dpms on"' \
#     before-sleep 'swaylock -f -c 000000'
#exec /home/danyspin97/Projects/coding/redshift/src/redshift
##exec kanshi
#exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
exec env RUST_BACKTRACE=1 ~/.cargo/bin/swayrd > /tmp/swayrd.log 2>&1

exec ~/.local/bin/wpaperd

# include /etc/sway/config.d/*

